local wezterm = require("wezterm")
local act = wezterm.action

local config = {}

-- üé® –¶–≤–µ—Ç–æ–≤–∞—è —Ç–µ–º–∞
config.color_scheme = "Catppuccin Mocha" -- –º–æ–∂–Ω–æ "Tokyo Night", "Nightfox", "OneDark (base16)", "Dracula"

-- ‚õìÔ∏è –®—Ä–∏—Ñ—Ç (–∫–∞–∫ –≤ Neovim GUI)
config.font = wezterm.font_with_fallback({
  "JetBrainsMono Nerd Font",
  "FiraCode Nerd Font",
})
config.font_size = 14.0

-- ü™ü –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞ –∏ –≤–∫–ª–∞–¥–æ–∫
config.window_decorations = "NONE"
config.enable_tab_bar = true
config.hide_tab_bar_if_only_one_tab = false
config.use_fancy_tab_bar = false
config.tab_bar_at_bottom = false
config.show_tab_index_in_tab_bar = true
config.window_padding = {
  left = 4,
  right = 4,
  top = 2,
  bottom = 2,
}

-- ü´• –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Ñ–æ–Ω–∞
config.window_background_opacity = 0.92

-- üåå –ù–µ–æ–Ω-—Ñ–æ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äî –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–≤–µ—Ä—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
-- config.background = {
--   {
--     source = { File = "/path/to/background.png" },
--     hsb = { brightness = 0.1 },
--   },
-- }

-- üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
config.check_for_updates = false

-- ‚ö° –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
config.keys = {
  -- üìë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∞–º–∏
  { key = "t", mods = "CMD", action = act.SpawnTab("CurrentPaneDomain") },
  { key = "w", mods = "CMD", action = act.CloseCurrentTab({ confirm = true }) },
  { key = "1", mods = "CMD", action = act.ActivateTab(0) },
  { key = "2", mods = "CMD", action = act.ActivateTab(1) },
  { key = "3", mods = "CMD", action = act.ActivateTab(2) },
  { key = "4", mods = "CMD", action = act.ActivateTab(3) },
  { key = "5", mods = "CMD", action = act.ActivateTab(4) },
  { key = "6", mods = "CMD", action = act.ActivateTab(5) },
  { key = "7", mods = "CMD", action = act.ActivateTab(6) },
  { key = "8", mods = "CMD", action = act.ActivateTab(7) },
  { key = "9", mods = "CMD", action = act.ActivateTab(8) },
  { key = "[", mods = "CMD", action = act.ActivateTabRelative(-1) },
  { key = "]", mods = "CMD", action = act.ActivateTabRelative(1) },
  
  -- ü™ü –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª—è–º–∏ (split panes)
  { key = "d", mods = "CMD", action = act.SplitHorizontal({ domain = "CurrentPaneDomain" }) },
  { key = "d", mods = "CMD|SHIFT", action = act.SplitVertical({ domain = "CurrentPaneDomain" }) },
  { key = "w", mods = "CMD|SHIFT", action = act.CloseCurrentPane({ confirm = true }) },
  
  -- üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏
  { key = "h", mods = "CMD|SHIFT", action = act.ActivatePaneDirection("Left") },
  { key = "j", mods = "CMD|SHIFT", action = act.ActivatePaneDirection("Down") },
  { key = "k", mods = "CMD|SHIFT", action = act.ActivatePaneDirection("Up") },
  { key = "l", mods = "CMD|SHIFT", action = act.ActivatePaneDirection("Right") },
  
  -- üìê –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–∞–Ω–µ–ª–µ–π
  { key = "LeftArrow", mods = "CMD|SHIFT", action = act.AdjustPaneSize({ "Left", 5 }) },
  { key = "RightArrow", mods = "CMD|SHIFT", action = act.AdjustPaneSize({ "Right", 5 }) },
  { key = "UpArrow", mods = "CMD|SHIFT", action = act.AdjustPaneSize({ "Up", 5 }) },
  { key = "DownArrow", mods = "CMD|SHIFT", action = act.AdjustPaneSize({ "Down", 5 }) },
  
  -- üîç –ü–æ–∏—Å–∫
  { key = "f", mods = "CMD", action = act.Search({ CaseInSensitiveString = "" }) },
  
  -- üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ/–≤—Å—Ç–∞–≤–∫–∞
  { key = "c", mods = "CMD", action = act.CopyTo("Clipboard") },
  { key = "v", mods = "CMD", action = act.PasteFrom("Clipboard") },
  
  -- üé® –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
  { key = "Enter", mods = "CMD", action = act.ToggleFullScreen },
  
  -- üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
  { key = ",", mods = "CMD", action = act.SpawnCommandInNewTab({
    cwd = wezterm.home_dir,
    args = { "nvim", wezterm.config_file },
  }) },
  
  -- üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  { key = "r", mods = "CMD|SHIFT", action = act.ReloadConfiguration },
}

-- üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
wezterm.on('update-right-status', function(window, pane)
  -- –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è macOS
  local success, stdout = wezterm.run_child_process({
    'sh', '-c', 'top -l 1 | head -10 | grep "CPU usage" | awk "{print $3}" | tr -d "%"'
  })
  
  local success2, stdout2 = wezterm.run_child_process({
    'sh', '-c', 'top -l 1 | head -10 | grep PhysMem | awk "{print $2}" | tr -d "GM"'
  })
  
  local cpu_usage = "--"
  local ram_used = "--"
  
  if success and stdout then
    cpu_usage = string.format("%.1f", tonumber(stdout:match("%S+")) or 0)
  end
  
  if success2 and stdout2 then
    local ram_val = tonumber(stdout2:match("%S+")) or 0
    ram_used = string.format("%.1f", ram_val)
  end
  
  -- –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
  local cpu_icon = "üî•"
  local ram_icon = "üß†"
  local separator = " ‚Ä¢ "
  
  -- –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è CPU
  local cpu_color = "#50fa7b"  -- –ó–µ–ª—ë–Ω—ã–π
  local cpu_val = tonumber(cpu_usage) or 0
  if cpu_val > 80 then
    cpu_color = "#ff5555"  -- –ö—Ä–∞—Å–Ω—ã–π
    cpu_icon = "‚ö°"
  elseif cpu_val > 50 then
    cpu_color = "#ffb86c"  -- –û—Ä–∞–Ω–∂–µ–≤—ã–π
    cpu_icon = "üå°Ô∏è"
  end
  
  -- –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è RAM
  local ram_color = "#50fa7b"  -- –ó–µ–ª—ë–Ω—ã–π
  local ram_val = tonumber(ram_used) or 0
  if ram_val > 12 then
    ram_color = "#ff5555"  -- –ö—Ä–∞—Å–Ω—ã–π
    ram_icon = "üíæ"
  elseif ram_val > 8 then
    ram_color = "#ffb86c"  -- –û—Ä–∞–Ω–∂–µ–≤—ã–π
    ram_icon = "üóÑÔ∏è"
  end
  
  -- –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
  local status_text = wezterm.format({
    { Foreground = { Color = cpu_color } },
    { Text = cpu_icon .. " " .. cpu_usage .. "%" },
    { Foreground = { Color = "#f8f8f2" } },  -- –ë–µ–ª—ã–π
    { Text = separator },
    { Foreground = { Color = ram_color } },
    { Text = ram_icon .. " " .. ram_used .. "G" },
    { Text = " " },
  })
  
  window:set_right_status(status_text)
end)

-- üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
config.status_update_interval = 1000  -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

return config


